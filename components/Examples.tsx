import React, { useState } from 'react';

export const Examples: React.FC = () => {
  const [activeExample, setActiveExample] = useState<number | null>(null);

  const examples = [
    {
      title: "Mathematical Symbols",
      description: "Identify mathematical operators and symbols for academic or technical documentation.",
      input: "‚àë‚à´‚àÇ‚àá‚àû‚â†‚â§‚â•¬±√ó√∑",
      useCase: "Perfect for LaTeX documents, mathematical notation, or scientific publications."
    },
    {
      title: "Currency Symbols",
      description: "Understand different currency symbols from around the world.",
      input: "$‚Ç¨¬£¬•‚Çπ‚ÇΩ‚Ç©‚Ç™‚Ç®‚Ç¶",
      useCase: "Essential for international e-commerce, financial applications, or global business documents."
    },
    {
      title: "Multilingual Text",
      description: "Analyze text containing multiple languages and scripts.",
      input: "Hello ŸÖÿ±ÿ≠ÿ®ÿß ◊©◊ú◊ï◊ù „Åì„Çì„Å´„Å°„ÅØ ÏïàÎÖïÌïòÏÑ∏Ïöî",
      useCase: "Useful for internationalization testing, multilingual content management, or language learning applications."
    },
    {
      title: "Special Punctuation",
      description: "Identify various punctuation marks and their proper names.",
      input: "\"''‚Äö‚Äû‚Ä¶‚Äì‚Äî‚Ä¢‚Ä∞‚Ä±",
      useCase: "Important for typography, publishing, and proper text formatting in professional documents."
    },
    {
      title: "Arrows and Symbols",
      description: "Decode directional arrows and geometric symbols.",
      input: "‚Üê‚Üí‚Üë‚Üì‚Üî‚Üï‚áê‚áí‚áë‚áì‚óÜ‚óá‚óã‚óè",
      useCase: "Great for UI design, flowcharts, diagrams, or navigation elements."
    },
    {
      title: "Diacritical Marks",
      description: "Understand accent marks and diacritics used in various languages.",
      input: "√†√°√¢√£√§√•√¶√ß√®√©√™√´√¨√≠√Æ√Ø",
      useCase: "Essential for proper pronunciation guides, language learning, or international name handling."
    }
  ];

  return (
    <div className="bg-white rounded-xl shadow-lg p-8 mb-8">
      <h2 className="text-3xl font-bold text-[#1E2A38] mb-6">Practical Examples & Use Cases</h2>
      
      <p className="text-lg text-[#1E2A38] mb-8 leading-relaxed">
        Discover how the Character to Name tool can help you in various real-world scenarios. 
        Click on any example below to see how it works:
      </p>

      <div className="space-y-6">
        {examples.map((example, index) => (
          <div key={index} className="border border-[#357ABD]/20 rounded-lg overflow-hidden">
            <button
              onClick={() => setActiveExample(activeExample === index ? null : index)}
              className="w-full p-6 text-left bg-gradient-to-r from-[#4A90E2]/5 to-[#357ABD]/5 hover:from-[#4A90E2]/10 hover:to-[#357ABD]/10 transition-all duration-200"
            >
              <div className="flex justify-between items-center">
                <div>
                  <h3 className="text-xl font-semibold text-[#1E2A38] mb-2">{example.title}</h3>
                  <p className="text-[#1E2A38]/80">{example.description}</p>
                </div>
                <div className="text-[#357ABD] text-2xl">
                  {activeExample === index ? '‚àí' : '+'}
                </div>
              </div>
            </button>
            
            {activeExample === index && (
              <div className="p-6 bg-white border-t border-[#357ABD]/20">
                <div className="mb-4">
                  <h4 className="font-semibold text-[#1E2A38] mb-2">Example Input:</h4>
                  <div className="bg-[#F7FAFC] p-4 rounded-lg border-2 border-[#357ABD]/20 font-mono text-lg">
                    {example.input}
                  </div>
                </div>
                
                <div className="mb-4">
                  <h4 className="font-semibold text-[#1E2A38] mb-2">Character Names:</h4>
                  <div className="bg-[#F7FAFC] p-4 rounded-lg border-2 border-[#357ABD]/20 text-sm space-y-1">
                    {example.input.split('').map((char, charIndex) => (
                      <div key={charIndex} className="flex items-center space-x-3">
                        <span className="font-mono text-lg w-8 text-center">{char}</span>
                        <span className="text-[#357ABD]">‚Üí</span>
                        <span className="text-[#1E2A38]">
                          {char === ' ' ? 'SPACE' : 
                           char === '‚àë' ? 'N-ARY SUMMATION' :
                           char === '‚à´' ? 'INTEGRAL' :
                           char === '‚àÇ' ? 'PARTIAL DIFFERENTIAL' :
                           char === '‚àá' ? 'NABLA' :
                           char === '‚àû' ? 'INFINITY' :
                           char === '‚â†' ? 'NOT EQUAL TO' :
                           char === '‚â§' ? 'LESS-THAN OR EQUAL TO' :
                           char === '‚â•' ? 'GREATER-THAN OR EQUAL TO' :
                           char === '¬±' ? 'PLUS-MINUS SIGN' :
                           char === '√ó' ? 'MULTIPLICATION SIGN' :
                           char === '√∑' ? 'DIVISION SIGN' :
                           char === '$' ? 'DOLLAR SIGN' :
                           char === '‚Ç¨' ? 'EURO SIGN' :
                           char === '¬£' ? 'POUND SIGN' :
                           char === '¬•' ? 'YEN SIGN' :
                           char === '‚Çπ' ? 'INDIAN RUPEE SIGN' :
                           char === '‚ÇΩ' ? 'RUBLE SIGN' :
                           char === '‚Ç©' ? 'WON SIGN' :
                           char === '‚Ç™' ? 'NEW SHEQEL SIGN' :
                           char === '‚Ç®' ? 'RUPEE SIGN' :
                           char === '‚Ç¶' ? 'NAIRA SIGN' :
                           char === 'H' ? 'LATIN CAPITAL LETTER H' :
                           char === 'e' ? 'LATIN SMALL LETTER E' :
                           char === 'l' ? 'LATIN SMALL LETTER L' :
                           char === 'o' ? 'LATIN SMALL LETTER O' :
                           char === 'ŸÖ' ? 'ARABIC LETTER MEEM' :
                           char === 'ÿ±' ? 'ARABIC LETTER REH' :
                           char === 'ÿ≠' ? 'ARABIC LETTER HAH' :
                           char === 'ÿ®' ? 'ARABIC LETTER BEH' :
                           char === 'ÿß' ? 'ARABIC LETTER ALEF' :
                           char === '◊©' ? 'HEBREW LETTER SHIN' :
                           char === '◊ú' ? 'HEBREW LETTER LAMED' :
                           char === '◊ï' ? 'HEBREW LETTER VAV' :
                           char === '„Åì' ? 'HIRAGANA LETTER KO' :
                           char === '„Çì' ? 'HIRAGANA LETTER N' :
                           char === '„Å´' ? 'HIRAGANA LETTER NI' :
                           char === '„Å°' ? 'HIRAGANA LETTER TI' :
                           char === '„ÅØ' ? 'HIRAGANA LETTER HA' :
                           char === 'Ïïà' ? 'HANGUL SYLLABLE AN' :
                           char === 'ÎÖï' ? 'HANGUL SYLLABLE NYEONG' :
                           char === 'Ìïò' ? 'HANGUL SYLLABLE HA' :
                           char === 'ÏÑ∏' ? 'HANGUL SYLLABLE SE' :
                           char === 'Ïöî' ? 'HANGUL SYLLABLE YO' :
                           `${char.toUpperCase()} CHARACTER`}
                        </span>
                      </div>
                    ))}
                  </div>
                </div>
                
                <div className="bg-[#4A90E2]/10 p-4 rounded-lg">
                  <h4 className="font-semibold text-[#1E2A38] mb-2">üí° Use Case:</h4>
                  <p className="text-[#1E2A38]/90">{example.useCase}</p>
                </div>
              </div>
            )}
          </div>
        ))}
      </div>

      <div className="mt-8 p-6 bg-gradient-to-r from-[#4A90E2]/10 to-[#357ABD]/10 rounded-lg">
        <h3 className="text-xl font-semibold text-[#1E2A38] mb-3">Professional Applications</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <h4 className="font-semibold text-[#357ABD] mb-2">For Developers:</h4>
            <ul className="space-y-1 text-sm text-[#1E2A38]/90">
              <li>‚Ä¢ Debug text encoding issues</li>
              <li>‚Ä¢ Validate internationalization</li>
              <li>‚Ä¢ Handle special characters in databases</li>
              <li>‚Ä¢ Create accessible applications</li>
            </ul>
          </div>
          <div>
            <h4 className="font-semibold text-[#357ABD] mb-2">For Designers:</h4>
            <ul className="space-y-1 text-sm text-[#1E2A38]/90">
              <li>‚Ä¢ Choose appropriate fonts</li>
              <li>‚Ä¢ Ensure proper character rendering</li>
              <li>‚Ä¢ Create multilingual designs</li>
              <li>‚Ä¢ Understand typography requirements</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
};